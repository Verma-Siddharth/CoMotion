// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:12344321@localhost:5432/CoMotion?schema=public"
}

model User {
  id           String        @id @default(uuid())
  name         String
  email        String        @unique
  password     String
  phoneNumber  String        @unique
  role         Role          @default(USER)
  joinRequests JoinRequest[]
  createdAt    DateTime      @default(now())
}

model Driver {
  id            String   @id @default(uuid())
  name          String
  email         String   @unique
  password      String
  phoneNumber   String   @unique
  role          Role     @default(DRIVER)
  licenseNumber String // Driver's license or any govt ID
  vehicleInfo   String // Details about the vehicle (auto, e-rickshaw, etc.)
  isVerified    Boolean  @default(false)
  rides         Ride[]   @relation("DriverRides")
  createdAt     DateTime @default(now())
}

model Ride {
  id           String        @id @default(uuid())
  driverId     String
  driver       Driver        @relation("DriverRides", fields: [driverId], references: [id])
  origin       String
  destination  String
  departure    DateTime
  seats        Int
  cost         Float
  joinRequests JoinRequest[]
  status       RideStatus    @default(SCHEDULED)
  createdAt    DateTime      @default(now())
}

model JoinRequest {
  id        String        @id @default(uuid())
  ride      Ride          @relation(fields: [rideId], references: [id])
  rideId    String
  user      User          @relation(fields: [userId], references: [id])
  userId    String
  status    RequestStatus @default(PENDING)
  createdAt DateTime      @default(now())
}

enum Role {
  USER
  DRIVER
  ADMIN
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
}

enum RideStatus {
  SCHEDULED
  ACTIVE
  ENDED
  CANCELLED
}
